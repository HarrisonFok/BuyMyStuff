[{"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/index.js":"1","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/reportWebVitals.js":"2","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/App.js":"3","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/store.js":"4","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/HomeScreen.js":"5","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Header.js":"6","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Footer.js":"7","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/RegisterScreen.js":"8","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/LoginScreen.js":"9","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/ProductScreen.js":"10","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/PaymentScreen.js":"11","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/ShippingScreen.js":"12","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/ProfileScreen.js":"13","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/OrderScreen.js":"14","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/OrderListScreen.js":"15","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/CartScreen.js":"16","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/UserEditScreen.js":"17","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/QuestionScreen.js":"18","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/UserListScreen.js":"19","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/NotFoundScreen.js":"20","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/QuestionReplyScreen.js":"21","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/ProductEditScreen.js":"22","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/reducers/productReducers.js":"23","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/PlaceOrderScreen.js":"24","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/reducers/orderReducers.js":"25","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/reducers/cartReducers.js":"26","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/ProductListScreen.js":"27","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/reducers/userReducers.js":"28","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/QuestionsListScreen.js":"29","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/reducers/questionReducers.js":"30","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/QuestionEditScreen.js":"31","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Product.js":"32","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Loader.js":"33","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Paginate.js":"34","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/ProductCarousel.js":"35","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Message.js":"36","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/SearchBox.js":"37","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Meta.js":"38","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/FormContainer.js":"39","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/CheckoutSteps.js":"40","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/actions/userActions.js":"41","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/actions/orderActions.js":"42","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/actions/questionActions.js":"43","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/constants/cartConstants.js":"44","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/constants/userConstants.js":"45","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/constants/productConstants.js":"46","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/constants/orderConstants.js":"47","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/actions/productActions.js":"48","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/constants/questionConstants.js":"49","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/actions/cartActions.js":"50","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Rating.js":"51","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/ChatScreen.js":"52","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/actions/chatActions.js":"53","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/constants/chatConstants.js":"54"},{"size":594,"mtime":1609440849539,"results":"55","hashOfConfig":"56"},{"size":362,"mtime":1609363975790,"results":"57","hashOfConfig":"56"},{"size":4068,"mtime":1611767491612,"results":"58","hashOfConfig":"56"},{"size":3455,"mtime":1610769381977,"results":"59","hashOfConfig":"56"},{"size":2946,"mtime":1610387793925,"results":"60","hashOfConfig":"56"},{"size":4820,"mtime":1611773206186,"results":"61","hashOfConfig":"56"},{"size":410,"mtime":1609366548496,"results":"62","hashOfConfig":"56"},{"size":3733,"mtime":1609531390960,"results":"63","hashOfConfig":"56"},{"size":2716,"mtime":1609986444725,"results":"64","hashOfConfig":"56"},{"size":9723,"mtime":1609800520612,"results":"65","hashOfConfig":"56"},{"size":1909,"mtime":1609555174383,"results":"66","hashOfConfig":"56"},{"size":3078,"mtime":1609554809627,"results":"67","hashOfConfig":"56"},{"size":6543,"mtime":1610742294293,"results":"68","hashOfConfig":"56"},{"size":8943,"mtime":1609730077390,"results":"69","hashOfConfig":"56"},{"size":3258,"mtime":1609728614147,"results":"70","hashOfConfig":"56"},{"size":4302,"mtime":1609534532991,"results":"71","hashOfConfig":"56"},{"size":4040,"mtime":1609705682372,"results":"72","hashOfConfig":"56"},{"size":3349,"mtime":1610778257366,"results":"73","hashOfConfig":"56"},{"size":3549,"mtime":1609699937734,"results":"74","hashOfConfig":"56"},{"size":170,"mtime":1610125910091,"results":"75","hashOfConfig":"56"},{"size":2351,"mtime":1610652668780,"results":"76","hashOfConfig":"56"},{"size":7042,"mtime":1609726622566,"results":"77","hashOfConfig":"56"},{"size":4239,"mtime":1609795374825,"results":"78","hashOfConfig":"56"},{"size":6560,"mtime":1609606528119,"results":"79","hashOfConfig":"56"},{"size":3844,"mtime":1609729402974,"results":"80","hashOfConfig":"56"},{"size":1303,"mtime":1609555490494,"results":"81","hashOfConfig":"56"},{"size":4822,"mtime":1610124865934,"results":"82","hashOfConfig":"56"},{"size":3829,"mtime":1610153354234,"results":"83","hashOfConfig":"56"},{"size":2270,"mtime":1610564776218,"results":"84","hashOfConfig":"56"},{"size":4915,"mtime":1610651806393,"results":"85","hashOfConfig":"56"},{"size":4824,"mtime":1611289060573,"results":"86","hashOfConfig":"56"},{"size":855,"mtime":1610762465107,"results":"87","hashOfConfig":"56"},{"size":389,"mtime":1609445556067,"results":"88","hashOfConfig":"56"},{"size":738,"mtime":1609792432646,"results":"89","hashOfConfig":"56"},{"size":1402,"mtime":1609817755927,"results":"90","hashOfConfig":"56"},{"size":275,"mtime":1609445582473,"results":"91","hashOfConfig":"56"},{"size":770,"mtime":1609788795392,"results":"92","hashOfConfig":"56"},{"size":490,"mtime":1609818208619,"results":"93","hashOfConfig":"56"},{"size":377,"mtime":1609528643550,"results":"94","hashOfConfig":"56"},{"size":1563,"mtime":1609554481862,"results":"95","hashOfConfig":"56"},{"size":7552,"mtime":1610153354202,"results":"96","hashOfConfig":"56"},{"size":5810,"mtime":1609729529703,"results":"97","hashOfConfig":"56"},{"size":7800,"mtime":1610690503458,"results":"98","hashOfConfig":"56"},{"size":238,"mtime":1609555349017,"results":"99","hashOfConfig":"56"},{"size":1482,"mtime":1610156178153,"results":"100","hashOfConfig":"56"},{"size":1520,"mtime":1609795296269,"results":"101","hashOfConfig":"56"},{"size":1208,"mtime":1609729328512,"results":"102","hashOfConfig":"56"},{"size":6482,"mtime":1609795556525,"results":"103","hashOfConfig":"56"},{"size":2012,"mtime":1610689348816,"results":"104","hashOfConfig":"56"},{"size":1360,"mtime":1609555445923,"results":"105","hashOfConfig":"56"},{"size":1330,"mtime":1609372816075,"results":"106","hashOfConfig":"56"},{"size":384,"mtime":1611768062377,"results":"107","hashOfConfig":"56"},{"size":1360,"mtime":1611782594654,"results":"108","hashOfConfig":"56"},{"size":133,"mtime":1611769606253,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"x7tfnu",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/index.js",[],["225","226"],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/reportWebVitals.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/App.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/store.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/HomeScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Header.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Footer.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/RegisterScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/LoginScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/ProductScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/PaymentScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/ShippingScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/ProfileScreen.js",["227"],"// When we have a form, our form fields are going to be part of the component state\nimport React, {useState, useEffect}  from 'react'\nimport {Table, Form, Button, Row, Col} from \"react-bootstrap\"\nimport { LinkContainer } from 'react-router-bootstrap';\n// Import these when we have to deal with redux state\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {getUserDetails, updateUserProfile} from \"../actions/userActions\";\nimport {listMyOrders} from \"../actions/orderActions\";\n\nconst ProfileScreen = ({history}) => {\n    // Check to see if the user is logged in\n    const userLogin = useSelector(state => state.userLogin);\n    // look at user reducer to know what is stored inside the state\n    const {userInfo} = userLogin;\n\n    const userDetails = useSelector(state => state.userDetails);\n    // look at user reducer to know what is stored inside the state\n    const {loading, error, user} = userDetails;\n\n    // Set component level states\n    const [name, setName] = useState(userInfo.name)\n    const [email, setEmail] = useState(userInfo.email)\n    const [password, setPassword] = useState(\"\")\n    const [confirmPwd, setConfirmPwd] = useState(\"\")\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    // Check to see if the user profile is updated\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n    // look at user reducer to know what is stored inside the state\n    const {success} = userUpdateProfile;\n\n    const orderListMy = useSelector(state => state.orderListMy);\n    // look at user reducer to know what is stored inside the state\n    const {loading: loadingOrders, error: errorOrders, orders} = orderListMy;\n\n    useEffect(() => {\n        // Redirect if not logged in\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            if (!user) {\n                // so that in the action, \"profile\" gets passed in and it'll reach /api/users/profile (and not a user id)\n                dispatch(getUserDetails(\"profile\"))\n                // want it to display the list of my orders once the screen loads\n                dispatch(listMyOrders())\n            } else {\n                // auto set in the form fields\n                setName(name)\n                setEmail(email)\n            }\n        }\n    }, [dispatch, history, userInfo, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPwd) {\n            setMessage(\"Passwords do not match\")\n        } else {\n            // takes in a user object\n            dispatch(updateUserProfile({id: user._id, name, email, password}))\n        }\n    }\n\n    return <Row>\n        <Col md={3}>\n        <h2>User Profile</h2>\n            {message && <Message variant=\"danger\">{message}</Message>}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {success && <Message variant=\"success\">Profile Updated</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"name\" placeholder=\"Enter email\" \n                                  value={name} onChange={(e) => setName(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" \n                                  value={email} onChange={(e) => setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter password\" \n                                  value={password} onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"confirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Confirm password\" \n                                  value={confirmPwd} onChange={(e) => setConfirmPwd(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type=\"submit\" variant=\"primary\">\n                    Update\n                </Button>\n            </Form>\n        </Col>\n        {/* column for orders */}\n        <Col md={9}>\n            <h2>My Orders</h2>\n            {loadingOrders ? <Loader /> : error ? <Message variant=\"danger\">{errorOrders}</Message> : \n            (\n                <Table striped bordered hover responsive className=\"table-sm\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>DELIVERED</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map(order => (\n                            <tr key={order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.createdAt.substring(0, 10)}</td>\n                                <td>{order.totalPrice}</td>\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                    <i className=\"fas fa-times\" style={{color: \"red\"}}></i>\n                                )}</td>\n                                <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\n                                    <i className=\"fas fa-times\" style={{color: \"red\"}}></i>\n                                )}</td>\n                                <td>\n                                    <LinkContainer to={`/order/${order._id}`}>\n                                        <Button className=\"btn-sm\" variant=\"light\">Details</Button>\n                                    </LinkContainer>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </Col>\n    </Row>\n}\n\nexport default ProfileScreen","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/OrderScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/OrderListScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/CartScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/UserEditScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/QuestionScreen.js",["228","229","230"],"import React, { useEffect, useState, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport Meta from '../components/Meta';\nimport { Row, Col, Form, Card, ListGroup } from \"react-bootstrap\";\nimport { MDBInput, MDBIcon, MDBBtn, MDBLink } from \"mdbreact\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {listQuestions, addQuestion, deleteQuestion } from \"../actions/questionActions\";\n\nconst QuestionScreen = ({match, history}) => {\n    const [comment, setComment] = useState(\"\")\n    const [question, setQuestion] = useState(\"\")\n    const [done, setDone] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const typedQuestion = useRef()\n\n    const questionsList = useSelector(state => state.questionsList)\n    const { loading, error, questions } = questionsList\n\n    // Make a request to backend and add products as component-level states\n    useEffect(() => {\n        setDone(false)\n        // Reset the MDBInput to be empty\n        typedQuestion.current.state.innerValue = \"\"\n        // Dispatch this so that the redux state will be filled\n        dispatch(listQuestions(match.params.id))\n    }, [dispatch, done, match.params.id])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const questionObj = {\n            question: question\n        }\n        dispatch(addQuestion(match.params.id, questionObj))\n        setDone(true)\n    }\n\n    const deleteHandler = (userId, qId) => {\n        dispatch(deleteQuestion(userId, qId))\n        setDone(true)\n    }\n\n    const editHandler = (userId, q) => {\n        history.push({pathname: `/user/${userId}/questions/${q._id}`, state: {questionObj: q}})\n    }\n\n    return (\n        <>\n            <Meta title=\"Ask questions\" />\n            <Link className=\"btn btn-light my-3\" to=\"/\">Go Back</Link>\n            <h1>Ask a Question</h1>\n\n            <Form onSubmit={submitHandler}>\n                <Row>\n                    <Col md={10}>\n                        <MDBInput ref={typedQuestion} onChange={(e) => setQuestion(e.target.value)}/>\n                    </Col>\n                    <Col md={2}>\n                        <MDBBtn size=\"lg\" type=\"submit\">\n                            <MDBIcon icon=\"user-plus\" /> Submit\n                        </MDBBtn>\n                    </Col>\n                </Row>\n            </Form>\n\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <div className=\"my-3\">\n                    {questions.map((p) => (\n                        <Row key={p._id}>\n                            <Card onClick={(e) => editHandler(match.params.id, p)}>\n                                <ListGroup>\n                                    <ListGroup.Item>\n                                        {p.question}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Card>\n                            <MDBBtn onClick={(e) => deleteHandler(match.params.id, p._id)}>\n                                <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                            </MDBBtn>\n                        </Row>\n                    ))}\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default QuestionScreen\n","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/UserListScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/NotFoundScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/QuestionReplyScreen.js",["231","232"],"import React, {useState, useEffect, useRef} from 'react'\nimport { MDBInput, MDBBtn } from \"mdbreact\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllComments, replyQuestion } from \"../actions/questionActions\";\nimport Loader from '../components/Loader';\n\nconst QuestionReplyScreen = ({location, history}) => {\n    const [reply, setReply] = useState(\"\")\n    const [questionId, setQuestionId] = useState(\"\")\n    const [seeComments, setSeeComments] = useState(false)\n\n    const {user: userId} = location.state\n\n    const dispatch = useDispatch()\n\n    const typedReply = useRef()\n\n    const questionReply = useSelector(state => state.questionReply)\n    const { success: successReply } = questionReply\n\n    const questionComments = useSelector(state => state.questionComments)\n    const { loading: loadingComments, comments } = questionComments\n\n    useEffect(() => {\n        // Get the question ID from the URL\n        const questionId = location.pathname.split(\"/\")[3]\n        setQuestionId(questionId)\n        // Reset the MDBInput to be empty\n        typedReply.current.state.innerValue = \"\"\n        if (seeComments) {\n            dispatch(getAllComments(questionId))\n        }\n    }, [dispatch, successReply, seeComments])\n\n    const replyHandler = e => {\n        const ret = {\n            \"reply\": reply\n        }\n        dispatch(replyQuestion(questionId, ret))\n    }\n\n    const handleChange = e => {\n        setReply(e.target.value)\n    }\n    \n    return (\n        <>\n            <div style={{marginBottom: \"2%\"}}>\n                <h1>Reply Question</h1>\n                <p>{location.state.question}</p>\n                <MDBInput ref={typedReply} onChange={handleChange}/>\n                <MDBBtn color=\"primary\" onClick={replyHandler}>Reply</MDBBtn>\n                <MDBBtn color=\"primary\" onClick={(e) => setSeeComments(!seeComments)}>See Comments</MDBBtn>\n            </div>\n            <div>\n                {loadingComments && <Loader /> }\n                {comments && seeComments && comments.map((comment, i) => ( \n                    <div key={i}> \n                        <p><strong>{comment.name}:</strong> {comment.comment}</p>\n                    </div>\n                ))}\n            </div>\n        </>\n    )\n}\n\n//className={userId === comment.questionId ? \"right\" : \"left\"}>\n\nexport default QuestionReplyScreen\n","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/ProductEditScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/reducers/productReducers.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/PlaceOrderScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/reducers/orderReducers.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/reducers/cartReducers.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/ProductListScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/reducers/userReducers.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/QuestionsListScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/reducers/questionReducers.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/QuestionEditScreen.js",["233"],"import React, {useState, useEffect, useRef} from 'react'\nimport { MDBInput, MDBBtn } from \"mdbreact\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editQuestion, getAllComments, replyQuestion, commentEdit, commentDelete } from \"../actions/questionActions\";\nimport Loader from '../components/Loader';\nimport \"./QuestionEditScreen.css\"\nimport {toastr} from 'react-redux-toastr'\n\nconst QuestionEditScreen = ({location, history}) => {\n    const questionObject = location.state.questionObj\n    const questionId = questionObject[\"_id\"]\n    const userId = questionObject[\"user\"]\n    const [done, setDone] = useState(false)\n    const [isEdit, setIsEdit] = useState(false)\n    const [editCommentId, setEditCommentId] = useState(\"\")\n\n    const [formData, setFormData] = useState({\n        question: \"\",\n        followup: \"\"\n    })\n\n    const dispatch = useDispatch()\n\n    const questionComments = useSelector(state => state.questionComments)\n    const { loading: loadingComments, comments } = questionComments\n\n    const refObj = useRef({})\n\n    useEffect(() => {\n        setDone(false)\n        refObj.current[\"typedReply\"] === null ? refObj.current[\"typedEdit\"].state.innerValue = \"\" : refObj.current[\"typedReply\"].state.innerValue = \"\"\n        dispatch(getAllComments(questionId))\n    }, [dispatch, isEdit, done])\n\n    const updateHandler = e => {\n        if (e.target.name === \"questionBtn\") {\n            dispatch(editQuestion(userId, questionId, formData.question))\n        } else if (e.target.name === \"replyBtn\") {\n            if (refObj.current[\"typedReply\"]) {\n                dispatch(replyQuestion(questionId, {\"reply\": formData.followup}))\n                setDone(true)\n            } else { // (refObj.current[\"typedEdit\"])\n                const body = {\n                    \"question\": questionId,\n                    \"userId\": userId,\n                    \"name\": questionObject.name,\n                    \"comment\": refObj.current[\"typedEdit\"].state.innerValue\n                }\n                // dispatch edit comment\n                dispatch(commentEdit(questionId, editCommentId, body))\n            }\n        }\n        setDone(true)\n    }\n\n    const deleteHandler = (qId, cId) => {\n        dispatch(commentDelete(qId, cId))\n        setDone(true)\n    }\n\n    const switchModeHandler = commentId => {\n        const replyModeMsg = \"Switched back to reply mode. Type your message.\"\n        const editModeMsg = \"Switched the edit mode. Type your message to edit the targeted comment.\"\n        setEditCommentId(commentId)\n        if (commentId === editCommentId) {\n            setIsEdit(!isEdit)\n            isEdit && alert(replyModeMsg)\n            !isEdit && alert(editModeMsg)\n        } else {\n            setIsEdit(true)\n            alert(editModeMsg)\n        }\n    }\n\n    const handleChange = e => {\n        setFormData({...formData, [e.target.name]: e.target.value })\n    }\n    \n    return (\n        <>\n            <div style={{marginBottom: \"2%\"}}>\n                <p>Question: {questionObject.question}</p>\n                <MDBInput name=\"question\" hint={questionObject.question} onChange={handleChange}/>\n                <MDBBtn color=\"primary\" name=\"questionBtn\" onClick={updateHandler}>Update</MDBBtn>\n            </div>\n            {done && !isEdit && toastr.success('Comment added!')}\n            {done && isEdit && toastr.success('Comment edited!')}\n            <div>\n                {loadingComments && <Loader /> }\n                {comments && comments.map((comment, i) => ( \n                    <div key={i}>\n                        {comment.userId === userId && ( \n                            <MDBBtn onClick={(e) => switchModeHandler(comment._id)}>\n                                <i className=\"fas fa-edit\"></i>\n                            </MDBBtn>\n                        )}\n                        {comment.userId === userId && (\n                            <MDBBtn> \n                                <i className=\"fas fa-trash-alt\" onClick={(e) => deleteHandler(comment.question, comment._id)}></i>\n                            </MDBBtn>\n                        )}\n                        <p>\n                            <strong>{comment.name}:</strong> {comment.comment}\n                        </p>\n                    </div>\n                ))}\n                {comments && comments.length === 0 && <p>No Comments</p>}\n            </div>\n            <div>\n                <MDBInput name=\"followup\" ref={e => isEdit ? refObj.current[\"typedEdit\"] = e : refObj.current[\"typedReply\"] = e} onChange={handleChange}/>\n                <MDBBtn color=\"primary\" name=\"replyBtn\" onClick={updateHandler}>{refObj.current[\"typedReply\"] ? \"Reply\" : \"Edit\"}</MDBBtn>\n            </div>\n        </>\n    )\n}\n\n// filter(comment => comment.question === questionId).\n\nexport default QuestionEditScreen\n","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Product.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Loader.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Paginate.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/ProductCarousel.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Message.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/SearchBox.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Meta.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/FormContainer.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/CheckoutSteps.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/actions/userActions.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/actions/orderActions.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/actions/questionActions.js",["234"],"import { QUESTIONS_LIST_REQUEST, QUESTIONS_LIST_SUCCESS, QUESTIONS_LIST_FAIL, QUESTIONS_ADD_REQUEST, QUESTIONS_ADD_SUCCESS, QUESTIONS_ADD_FAIL, QUESTIONS_DELETE_REQUEST, QUESTIONS_DELETE_SUCCESS, QUESTIONS_DELETE_FAIL, QUESTIONS_EDIT_REQUEST, QUESTIONS_EDIT_SUCCESS, QUESTIONS_EDIT_FAIL, QUESTIONS_ALL_REQUEST, QUESTIONS_ALL_SUCCESS, QUESTIONS_ALL_FAIL, QUESTIONS_REPLY_REQUEST, QUESTIONS_REPLY_SUCCESS, QUESTIONS_REPLY_FAIL, QUESTIONS_SINGLE_REQUEST, QUESTIONS_SINGLE_SUCCESS, QUESTIONS_SINGLE_FAIL, QUESTIONS_ALL_COMMENTS_REQUEST, QUESTIONS_ALL_COMMENTS_SUCCESS, QUESTIONS_ALL_COMMENTS_FAIL, QUESTIONS_COMMENT_DELETE_REQUEST, QUESTIONS_COMMENT_DELETE_SUCCESS, QUESTIONS_COMMENT_DELETE_FAIL, QUESTIONS_COMMENT_EDIT_REQUEST, QUESTIONS_COMMENT_EDIT_SUCCESS, QUESTIONS_COMMENT_EDIT_FAIL } from \"../constants/questionConstants\"\nimport axios from \"axios\";\n\n// same as what we did for the useEffect() at first \nexport const listQuestions = (id) => async(dispatch) => {\n    try {\n        dispatch({type: QUESTIONS_LIST_REQUEST})\n\n        const res = await axios.get(`/api/users/${id}/questions`)\n        \n        dispatch({\n            type: QUESTIONS_LIST_SUCCESS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: QUESTIONS_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const addQuestion = (id, question) => async(dispatch) => {\n    try {\n        dispatch({type: QUESTIONS_ADD_REQUEST})\n\n        const res = await axios.post(`/api/users/${id}/questions`, question)\n        \n        dispatch({\n            type: QUESTIONS_ADD_SUCCESS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: QUESTIONS_ADD_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const deleteQuestion = (userId, qId) => async(dispatch) => {\n    try {\n        dispatch({type: QUESTIONS_DELETE_REQUEST})\n\n        const res = await axios.delete(`/api/users/${userId}/questions/${qId}`)\n        \n        dispatch({\n            type: QUESTIONS_DELETE_SUCCESS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: QUESTIONS_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const editQuestion = (userId, qId, question) => async(dispatch) => {\n    const body = {question: question}\n    try {\n        dispatch({type: QUESTIONS_EDIT_REQUEST})\n\n        const res = await axios.put(`/api/users/${userId}/questions/${qId}`, {question: question})\n        \n        dispatch({\n            type: QUESTIONS_EDIT_SUCCESS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: QUESTIONS_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const getAllQuestions = () => async(dispatch, getState) => {\n    try {\n        dispatch({type: QUESTIONS_ALL_REQUEST})\n\n        const {userLogin: {userInfo}} = getState()\n  \n        // Send in header\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const res = await axios.get(`/api/users/questionsList`, config)\n        \n        dispatch({\n            type: QUESTIONS_ALL_SUCCESS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: QUESTIONS_ALL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const getSingleQuestion = (qId) => async(dispatch, getState) => {\n    try {\n        dispatch({type: QUESTIONS_SINGLE_REQUEST})\n\n        const {userLogin: {userInfo}} = getState()\n  \n        // Send in header\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const res = await axios.get(`/api/users/questionsList/${qId}`, config)\n        \n        dispatch({\n            type: QUESTIONS_SINGLE_SUCCESS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: QUESTIONS_SINGLE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const replyQuestion = (qId, reply) => async(dispatch, getState) => {\n    try {\n        dispatch({type: QUESTIONS_REPLY_REQUEST})\n\n        const {userLogin: {userInfo}} = getState()\n  \n        // Send in header\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const res = await axios.post(`/api/users/questionsList/${qId}`, reply, config)\n        \n        dispatch({\n            type: QUESTIONS_REPLY_SUCCESS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: QUESTIONS_REPLY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const commentEdit = (qId, cId, body) => async(dispatch, getState) => {\n    try {\n        dispatch({type: QUESTIONS_COMMENT_EDIT_REQUEST})\n\n        const {userLogin: {userInfo}} = getState()\n  \n        // Send in header\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const res = await axios.put(`/api/users/questionsList/${qId}/comments/${cId}`, body, config)\n        \n        dispatch({\n            type: QUESTIONS_COMMENT_EDIT_SUCCESS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: QUESTIONS_COMMENT_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const commentDelete = (qId, cId) => async(dispatch, getState) => {\n    try {\n        dispatch({type: QUESTIONS_COMMENT_DELETE_REQUEST})\n\n        const {userLogin: {userInfo}} = getState()\n  \n        // Send in header\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const res = await axios.delete(`/api/users/questionsList/${qId}/comments/${cId}`, config)\n        \n        dispatch({\n            type: QUESTIONS_COMMENT_DELETE_SUCCESS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: QUESTIONS_COMMENT_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const getAllComments = (qId) => async(dispatch, getState) => {\n    try {\n        dispatch({type: QUESTIONS_ALL_COMMENTS_REQUEST})\n\n        const res = await axios.get(`/api/users/questionsList/${qId}/comments`)\n        \n        dispatch({\n            type: QUESTIONS_ALL_COMMENTS_SUCCESS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: QUESTIONS_ALL_COMMENTS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}","/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/constants/cartConstants.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/constants/userConstants.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/constants/productConstants.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/constants/orderConstants.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/actions/productActions.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/constants/questionConstants.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/actions/cartActions.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/components/Rating.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/screens/ChatScreen.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/actions/chatActions.js",[],"/Users/harrisonapple/Documents/MERN/BuyMyStuff/frontend/src/constants/chatConstants.js",[],["235","236"],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":56,"column":8,"nodeType":"243","endLine":56,"endColumn":43,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":5,"column":37,"nodeType":"247","messageId":"248","endLine":5,"endColumn":44},{"ruleId":"245","severity":1,"message":"249","line":12,"column":12,"nodeType":"247","messageId":"248","endLine":12,"endColumn":19},{"ruleId":"245","severity":1,"message":"250","line":12,"column":21,"nodeType":"247","messageId":"248","endLine":12,"endColumn":31},{"ruleId":"245","severity":1,"message":"251","line":12,"column":18,"nodeType":"247","messageId":"248","endLine":12,"endColumn":24},{"ruleId":"241","severity":1,"message":"252","line":33,"column":8,"nodeType":"243","endLine":33,"endColumn":45,"suggestions":"253"},{"ruleId":"241","severity":1,"message":"254","line":33,"column":8,"nodeType":"243","endLine":33,"endColumn":32,"suggestions":"255"},{"ruleId":"245","severity":1,"message":"256","line":66,"column":11,"nodeType":"247","messageId":"248","endLine":66,"endColumn":15},{"ruleId":"237","replacedBy":"257"},{"ruleId":"239","replacedBy":"258"},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'email' and 'name'. Either include them or remove the dependency array. You can also do a functional update 'setName(n => ...)' if you only need 'name' in the 'setName' call.","ArrayExpression",["261"],"no-unused-vars","'MDBLink' is defined but never used.","Identifier","unusedVar","'comment' is assigned a value but never used.","'setComment' is assigned a value but never used.","'userId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["262"],"React Hook useEffect has a missing dependency: 'questionId'. Either include it or remove the dependency array.",["263"],"'body' is assigned a value but never used.",["259"],["260"],"no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [dispatch, history, userInfo, user, name, email]",{"range":"270","text":"271"},"Update the dependencies array to be: [dispatch, successReply, seeComments, location.pathname]",{"range":"272","text":"273"},"Update the dependencies array to be: [dispatch, isEdit, done, questionId]",{"range":"274","text":"275"},[2407,2442],"[dispatch, history, userInfo, user, name, email]",[1207,1244],"[dispatch, successReply, seeComments, location.pathname]",[1299,1323],"[dispatch, isEdit, done, questionId]"]